[gd_scene load_steps=6 format=3 uid="uid://b70nfjw7t75e6"]

[ext_resource type="Texture2D" uid="uid://u65v21lwx8h5" path="res://Assets/Art/Powerups/Life.png" id="1_jt4tp"]

[sub_resource type="GDScript" id="GDScript_57p2m"]
script/source = "extends Area2D

@onready var player=$\"../Player\"
@onready var main= get_parent().get_parent()

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if is_instance_valid(player):
		if player.lives == player.maxLives:
			queue_free()


func _on_body_entered(body):
	
	if(body.is_in_group(\"Player\")):
		body.lives += 1
		queue_free()
		
	#Temporary solution to the problem of asteroid and powerup overlapping
	elif(body.is_in_group(\"Environment\")):
		queue_free()
		main.spawn_powerup=true
		
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_mr63p"]
radius = 250.0
height = 800.0

[sub_resource type="Animation" id="Animation_ositd"]
resource_name = "Idle"
loop_mode = 2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, 50), Vector2(0, -50), Vector2(0, 50)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ayqd6"]
_data = {
"Idle": SubResource("Animation_ositd")
}

[node name="Life_Powerup" type="Area2D"]
scale = Vector2(0.05, 0.05)
script = SubResource("GDScript_57p2m")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_mr63p")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(0, 50)
scale = Vector2(0.5, 0.5)
texture = ExtResource("1_jt4tp")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Idle"
speed_scale = 2.0
libraries = {
"": SubResource("AnimationLibrary_ayqd6")
}

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
